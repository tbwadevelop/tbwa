<?php

/**
 * Implements hook_help().
 */
function dark_help($path, $arg) {
  switch ($path) {
    case 'admin/help#dark':
      return '<p>' . t('help dark', array('drupal' => 1)) . '</p>';
  }
}

/**
 * Implements hook_permission().
 */
function dark_permission() {
  return array(
    'administer  dark' => array(
      'title' => t('Administer  dark'),
      'description' => t('Perform administration tasks for dark'),
    ),
  );
}


/**
 * Implements hook_menu().
 */
function dark_menu() {
  
    $items=array();

    $items['admin/config/records'] = array(
        'title' => 'Records',
        'description' => 'Settings related to formatting and authoring content.',
        'position' => 'left',
        'weight' => -15, 
        'page callback' => 'drupal_get_form',
        'page arguments' => array('dark_form_records'),
        'access arguments' => array('administer site configuration'),
        'file' => 'includes/dark_records.inc',
      );

    $items['admin/config/system/records'] = array(
      'title' => t('Records'),
      'description' => t('Records for people'),
      'file' => 'includes/dark_records.inc',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('dark_form_records'),
      'access arguments' => array('administer site configuration'),
    );


     $items['admin/config/system/records-views'] = array(
        'title' => 'Example RSS feed',
        'page callback' => 'dark_view_record',
        'access arguments' => array('access content'),
        'file' => 'includes/dark_views_records.inc',
        'type' => MENU_CALLBACK,
      );


    /**
     * Default menu local task
     */
    $items['admin/config/system/records/settings'] = array(    
      'title'   => t('GENERAL RECORDS'),
      'type'    => MENU_DEFAULT_LOCAL_TASK,
      'weight'  => 1,
    );

    return $items; 
}

/**
 * Implements hook_block_info().
 */
function dark_block_info() {
  $blocks['filters-custom'] = array(
    'info' => t('Filters custom'),
    'cache' => DRUPAL_NO_CACHE
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function dark_block_view($delta = '') {
 $block = array();
  switch ($delta) {
    case 'filters-custom':
      $block['subject'] = t('Filters Expues Drupal');
      $block['content'] = drupal_get_form('dark_block_form');
      break;
    
  }
  return $block;
}

/**
 * Implements hook_init().
 */
function dark_init() {
   drupal_add_css(drupal_get_path('module', 'dark') . '/css/dark.css');
}


/**
 * Implementacion de hook form, para formulario renderizado .
 */
function dark_block_form($form, $form_state) {
   $form = array();
   $form['filter_expoce_cumple'] = array(
      '#type' => 'date', 
      '#title' => "date", 
      '#description' => "descipcion", 
      '#required' => TRUE,
      '#attributes' => array('class' => array('filter_expoce_cumple')),

  );
    $form['filter_expoce_gender'] = array(
      '#type' => 'select',
      '#title' => t('gender'),
      '#required' => TRUE,
      '#description' => t('Example :Men or Women'),
      '#options' => array(
        1 => t('Masculino'),
        2 => t('Femenino'),
        ),
      '#attributes' => array('class' => array('filter_expoce_gender')),
    );   

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Submit',
    );
  return $form;
}
